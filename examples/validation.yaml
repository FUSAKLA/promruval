# customExcludeAnnotation: my_disable_annotation
# customDisableComment: my_disable_comment

prometheus:
  url: https://prometheus.demo.do.prometheus.io
  bearerTokenFile: ./bearer.token

validationRules:
  - name: check-severity-label
    scope: Alert
    validations:
      - type: hasLabels
        params:
          labels: ["severity"]
      - type: labelHasAllowedValue
        paramsFromFile: ./allowed_values_params.yaml
      - type: exclusiveLabels
        params:
          firstLabel: severity
          firstLabelValue: info
          secondLabel: page
      # FIXME: Disabled until demo.do.prometheus.io is back online, see https://github.com/prometheus/demo-site/issues/114
      # - type: expressionCanBeEvaluated
      #   params:
      #     timeSeriesLimit: 20
      #     evaluationDurationLimit: 10s
      # - type: expressionUsesExistingLabels
      # - type: expressionSelectorsMatchesAnything
      - type: expressionDoesNotUseIrate
        additionalDetails: "Just do as I say!"
      - type: expressionDoesNotUseOlderDataThan
        params:
          limit: "6h"

  - name: check-team-label
    scope: Alert
    validations:
      - type: hasLabels
        params:
          labels: ["xxx"]
      - type: labelHasAllowedValue
        params:
          label: "team"
          allowedValues:
            - "sre@company.com"
          ignoreTemplatedValues: true

  - name: check-playbook-annotation
    scope: Alert
    validations:
      - type: hasAnyOfAnnotations
        params:
          annotations: ["playbook", "link"]
      - type: annotationIsValidURL
        params:
          annotation: "link"
          resolveUrl: true

  - name: check-alert-title
    scope: Alert
    validations:
      - type: hasAnnotations
        params:
          annotations: ["title"]

  - name: check-prometheus-limitations
    scope: All rules
    validations:
      - type: expressionDoesNotUseExperimentalFunctions
      - type: expressionUsesUnderscoresInLargeNumbers
      - type: expressionDoesNotUseOlderDataThan
        params:
          limit: "6h"
      - type: expressionDoesNotUseLabels
        params:
          labels: ["cluster", "locality", "prometheus-type", "replica"]

  - name: check-metric-name
    scope: Alert
    validations:
      - type: expressionWithNoMetricName
      - type: validateLabelTemplates
      - type: keepFiringForIsNotLongerThan
        params:
          limit: "1h"

  - name: check-groups
    scope: Group
    validations:
      - type: hasAllowedEvaluationInterval
        params:
          minimum: "20s"
          intervalMustBeSet: false
      - type: maxRulesPerGroup
        params:
          limit: 10
      - type: hasAllowedLimit
        params:
          limit: 100

  - name: check-formatting
    scope: All rules
    validations:
      - type: expressionIsWellFormatted
        params:
          showExpectedForm: true
          skipExpressionsWithComments: true
      - type: expressionDoesNotUseClassicHistogramBucketOperations

  - name: check-recording-rules
    scope: Recording rule
    validations:
      - type: recordedMetricNameDoesNotMatchRegexp
        params:
          regexp: "^foo_bar$"
      - type: recordedMetricNameMatchesRegexp
        params:
          regexp: "[^:]+:[^:]+:[^:]+"
          negative: true
